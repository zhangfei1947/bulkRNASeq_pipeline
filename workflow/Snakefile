container: "/scratch/group/lilab/Phil/RNASeq_container.sif"

all_input = ["02.QC_fastp/QC_summary_table.tsv", 
        "02.QC_fastp/duprate.boxplot.png",
        "03.Alignment_hisat2/mapping.summary",
        "03.Alignment_hisat2/mappingrate.boxplot.png",
        "04.Quant_featureCounts/counts_raw.tsv",
        "04.Quant_featureCounts/counts_filter.tsv",
        "04.Quant_featureCounts/fc.summary",
        "04.Quant_featureCounts/assignment_stacked_barplot.png",
        "05.Normalization_DESeq2/counts_normalized.tsv"]

if "corr" in config:
    all_input.append(expand("05.Normalization_DESeq2/corr.heatmap.{corr_name}.png", corr_name=[item.keys() for item in config["corr"]]))
if "pca_color" in config:
    all_input.append(expand("05.Normalization_DESeq2/pca.plot.{color_scheme}.png", color_scheme=[item.keys() for item in config["pca_color"]]))
if "diff_comparisons" in config:
    all_input.append(expand("06.Diff_Expression/{comp}.deseq2_results.tsv", comp=config["diff_comparisons"]))
if "venn" in config:
    all_input.append(expand("07.Venn/{group}.venn.png", group=[item.keys() for item in config["venn"]]))
if "GO" in config:
    all_input.append(expand("08.Enrichment/{comparison}.go_enrichment.tsv", comparison=config["GO"]))


rule all:
    input:
        all_input

# Include modules
# softlink rawdata 
include: "rules/preprocess.smk"

# rawdata quality control
include: "rules/qc.smk"

# mapping to reference genome
include: "rules/align.smk"

# gene expression quantification
include: "rules/quant.smk"

# row readcount normalization, sample correlation, PCA
include: "rules/normalize.smk"

# differential gene expression
include: "rules/dge.smk"

# plot venn diagram
include: "rules/venn.smk"

# go enrichment analysis
include: "rules/go.smk"
